text.title = Информация
text.about_project = Об этом проекте

text.general = Общая информация
text.general.h5.1 = Целью этого проекта является предоставление пользователям развлекательных услуг в виде решения задач на различные темы.
text.general.h5.2 = Перед началом пользования ресурсом необходимо авторизироваться (при наличии учетной записи) или зарегистрироваться: без выполнения данных условий функционал будет сильно ограничен.

text.func = Функционал
text.func.before_ul = После регистрации пользователю станут доступны следующие функции:
text.func.li.1 = Просмотр доступных задач для решения по категориям
text.func.li.2 = Доступ к любой из представленных задач
text.func.li.3 = Возможность решать задачи и отсылать свои ответы на сервер
text.func.li.4 = В случае успешного решения задачи пользователь получит опыт, и, набрав его достаточное количество, будет награжден новым уровнем и званием, соответствующему данному уровню.
text.func.li.5 = Кроме того, при соблюдении особых условий также будет получено достижение.
text.func.li.6 = Весь прогресс станет доступен для просмотра на странице профиля пользователя.
text.func.li.7 = Возможность настроить текущее фото профиля.
text.func.footer = Реализована полная локализация сайта: были переведены на 3 доступных на данный момент языка - русский, английский и немецкий - элементы интерфейса, все достижения и звания, категории, задания и ответы к ним.

text.inner = Внутренняя информация
text.inner.frontend = Frontend компонент:
text.inner.frontend.p = Создана при помощи технологий HTML и фреймворка w3css на основе комбинации JSP + Servlet.

text.inner.backend = Backend компонент:
text.inner.backend.li.con = Соединение с базой данных
text.inner.backend.li.con.p = Реализован Connection Pool для работы с фиксированным количеством заранее подготовленных соединений. Само соединение представлено в виде Proxy обертки.
text.inner.backend.li.db = База данных
text.inner.backend.li.db.p = В проекте используется база данных PostgreSQL. Структура базы иллюстрирована рис. 1.
text.inner.backend.li.wdb = Работа с базой данных
text.inner.backend.li.wdb.p.1 = Была реализована двухслойная система работы с базой данных - уровень DAO и уровень Service.
text.inner.backend.li.wdb.p.2 = Уровень DAO был разработан с поддержкой локализированных SQL запросов, осуществляемый при помощи инъекции необходимого кода локали в сам запрос, в виду чего можно получать необходимые переведенные объекты.
text.inner.backend.li.wdb.p.3 = Уровень Service скрывает реализацию работы с DAO и предоставляет готовые к использованию методы по получению или записи информации в базу данных.
text.inner.backend.li.wdb.p.4 = Полученные в ходе работы сервиса результаты возвращаются в виде готовых Entity объектов или в виде специальных локализированных оберток.

text.filter = Фильтры
text.filter.p = Применено два фильтра: для отслеживания состояния текущего языка и для сохранения предыдущей посещенной страницы.

text.local = Локализация
text.local.p.1 = Локализация производится непосредственно на JSP странице с использованием функционала библиотеки JSTL.
text.local.p.2 = Все имеющиеся локализации хранятся в виде Resource Bundle.

text.add = Приложение
text.add.p = Рис. 1 - UML схема