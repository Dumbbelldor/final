text.title = Infoseite
text.about_project = Über dieses Projekt

text.general = Allgemeine Informationen
text.general.h5.1 = Der Hauptzweck der Erstellung dieses Projekts besteht darin, den Benutzern Unterhaltungsdienste in Form der Lösung von Aufgaben in verschiedenen Kategorien bereitzustellen.
text.general.h5.2 = Bevor Sie die Ressource nutzen, müssen Sie sich anmelden (wenn Sie ein Konto haben) oder registrieren: Ohne diese Bedingungen wird die Funktionalität stark eingeschränkt.

text.func = Funktionalität
text.func.before_ul = Nach der Registrierung stehen dem Nutzer folgende Funktionen zur Verfügung:
text.func.li.1 = Durchsuchen verfügbarer Aufgaben zum Lösen nach Kategorien
text.func.li.2 = Zugriff auf jede der vorgestellten Aufgaben
text.func.li.3 = Fähigkeit, Aufgaben zu lösen und Ihre Antworten an den Server zu senden
text.func.li.4 = Bei erfolgreicher Lösung der Aufgabe sammelt der Benutzer Erfahrung und erhält, wenn er eine ausreichende Menge davon gesammelt hat, ein neues Level und einen diesem Level entsprechenden Rang
text.func.li.5 = Darüber hinaus wird bei Erfüllung besonderer Bedingungen auch eine Leistung erzielt
text.func.li.6 = Alle Fortschritte können auf der Benutzerprofilseite angezeigt werden
text.func.li.7 = Möglichkeit, Ihr aktuelles Profilfoto anzupassen
text.func.footer = Die vollständige Lokalisierung der Site wurde implementiert: Die Elemente der Benutzeroberfläche, alle Erfolge und Titel, Kategorien, Aufgaben und Antworten darauf wurden in 3 derzeit verfügbare Sprachen übersetzt - Russisch, Englisch und Deutsch.

text.inner = Innere Informationen
text.inner.frontend = Frontend-Komponente:
text.inner.frontend.p = Erstellt mit HTML-Technologien und dem w3css-Framework basierend auf einer Kombination von JSP + Servlet.

text.inner.backend = Backend-Komponente:
text.inner.backend.li.con = Verbindung zur Datenbank
text.inner.backend.li.con.p = Der Connection Pool wurde implementiert, um mit einer festen Anzahl von vorbereiteten Verbindungen zu arbeiten. Die Verbindung selbst wird als Proxy-Wrapper dargestellt.
text.inner.backend.li.db = Datenbank
text.inner.backend.li.db.p = Das Projekt verwendet eine PostgreSQL-Datenbank. Die Struktur der Datenbank ist in Abb. 1 dargestellt.
text.inner.backend.li.wdb = Mit Datenbank arbeiten
text.inner.backend.li.wdb.p.1 = Es wurde ein zweischichtiges System für die Arbeit mit der Datenbank implementiert – die DAO-Ebene und die Service-Ebene.
text.inner.backend.li.wdb.p.2 = Die DAO-Schicht wurde mit Unterstützung für lokalisierte SQL-Abfragen entwickelt, die durch das Einfügen des erforderlichen Gebietsschemacodes in die Abfrage selbst implementiert wird, was bedeutet, dass Sie die übersetzten Objekte abrufen können.
text.inner.backend.li.wdb.p.3 = Die Dienstschicht verbirgt die Implementierung der Arbeit mit DAO und bietet gebrauchsfertige Methoden zum Abrufen oder Schreiben von Informationen in die Datenbank.
text.inner.backend.li.wdb.p.4 = Die während des Betriebs des Dienstes erhaltenen Ergebnisse werden als vollständige Entity-Objekte oder in Form spezieller lokalisierter Wrapper zurückgegeben.

text.filter = Filter
text.filter.p = Es wurden zwei Filter angewendet: um den Status der aktuellen Sprache zu verfolgen und die zuvor besuchte Seite zu speichern.

text.local = Lokalisierung
text.local.p.1 = Die Lokalisierung erfolgt direkt auf der JSP-Seite unter Verwendung der Funktionalität der JSTL-Bibliothek.
text.local.p.2 = Alle verfügbaren Lokalisierungen werden als Ressourcenpaket gespeichert.

text.add = Nachtrag
text.add.p = Abb. 1 - UML-Schema