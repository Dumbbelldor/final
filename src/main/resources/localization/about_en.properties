text.title = Info Page
text.about_project = About this project

text.general = General Information
text.general.h5.1 = The main purpose of creating this project is to provide users with entertainment services in the form of solving tasks on various categories.
text.general.h5.2 = Before using the resource, you must log in (if you have an account) or register: without meeting these conditions, the functionality will be severely limited.

text.func = Functionality
text.func.before_ul = After registration, the following functions will become available to the user:
text.func.li.1 = Browsing available tasks for solving by categories
text.func.li.2 = Access to any of the presented tasks
text.func.li.3 = Ability to solve tasks and send your answers to the server
text.func.li.4 = In case of a successful solution of the task, the user will gain experience, and, having collected a sufficient amount of it, will be awarded with a new level and rank corresponding to this level
text.func.li.5 = In addition, if special conditions are met, an achievement will also be obtained
text.func.li.6 = All progress will be available for viewing on the user profile page
text.func.li.7 = Possibility to customize your current profile photo
text.func.footer = Full localization of the site has been implemented: the interface elements, all achievements and titles, categories, tasks and answers to them have been translated into 3 languages available at the moment - Russian, English and German.

text.inner = Inner Information
text.inner.frontend = Frontend component:
text.inner.frontend.p = Created using HTML technologies and the w3css framework based on a combination of JSP + Servlet.

text.inner.backend = Backend component:
text.inner.backend.li.con = Connection to the database
text.inner.backend.li.con.p = The Connection Pool has been implemented to work with a fixed number of pre-prepared connections. The connection itself is presented as a Proxy wrapper.
text.inner.backend.li.db = Database
text.inner.backend.li.db.p = The project uses a PostgreSQL database. The structure of the database is illustrated in Fig. 1.
text.inner.backend.li.wdb = Work with database
text.inner.backend.li.wdb.p.1 = A two-layer system for working with the database was implemented - the DAO level and the Service level.
text.inner.backend.li.wdb.p.2 = The DAO layer was designed with support for localized SQL queries, implemented by injecting the required locale code into the query itself, which means that you can get the translated objects.
text.inner.backend.li.wdb.p.3 = The Service layer hides the implementation of working with DAO and provides ready-to-use methods for getting or writing information to the database.
text.inner.backend.li.wdb.p.4 = The results obtained during the operation of the service are returned as the complete Entity objects or in the form of special localized wrappers.

text.filter = Filters
text.filter.p = Two filters have been applied: to track the state of the current language and to save the previous visited page.

text.local = Localization
text.local.p.1 = Localization is done directly on the JSP page using the functionality of the JSTL library.
text.local.p.2 = All available localizations are stored as a Resource Bundle.

text.add = Addendum
text.add.p = Fig. 1 - UML schema